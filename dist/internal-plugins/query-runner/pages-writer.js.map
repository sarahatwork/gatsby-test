{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","fs","store","emitter","getLayoutById","layouts","id","find","l","writePages","bootstrapFinished","program","pages","getState","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","layoutOjb","machineId","layoutComponentChunkName","components","json","pageLayouts","forEach","push","p","component","uniq","uniqBy","c","syncRequires","map","componentWrapperPath","join","j","directory","asyncRequires","Promise","all","writeFile","JSON","stringify","exports","oldPages","debouncedWritePages","debounce","isEqual","leading","on"],"mappings":"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","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport { generatePathChunkName } from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\nconst getLayoutById = layouts => id => layouts.find(l => l.id === id)\n\n// Write out pages information.\nconst writePages = async () => {\n  bootstrapFinished = true\n  let { program, pages, layouts } = store.getState()\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => {\n      const layoutOjb = getLayoutById(layouts)(layout)\n      return [\n        ...mem,\n        {\n          componentChunkName,\n          layout: layoutOjb ? layoutOjb.machineId : layout,\n          layoutComponentChunkName: layoutOjb && layoutOjb.componentChunkName,\n          jsonName,\n          path,\n          matchPath,\n        },\n      ]\n    },\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let json = []\n  let pageLayouts = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      let layout = getLayoutById(layouts)(p.layout)\n      pageLayouts.push(layout)\n      json.push({\n        jsonName: layout.jsonName,\n      })\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  pageLayouts = _.uniq(pageLayouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.machineId}\": preferDefault(require(\"${\n          l.componentWrapperPath\n        }\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${\n          c.componentChunkName\n        }!${joinPath(c.component)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${\n          j.jsonName\n        }\": require(\"gatsby-module-loader?name=${generatePathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.machineId}\": require(\"gatsby-module-loader?name=${\n          l.componentChunkName\n        }!${l.componentWrapperPath}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  await Promise.all([\n    fs.writeFile(\n      joinPath(program.directory, `.cache/pages.json`),\n      JSON.stringify(pagesData, null, 4)\n    ),\n    fs.writeFile(`${program.directory}/.cache/sync-requires.js`, syncRequires),\n    fs.writeFile(\n      joinPath(program.directory, `.cache/async-requires.js`),\n      asyncRequires\n    ),\n  ])\n\n  return\n}\n\nexports.writePages = writePages\n\nlet bootstrapFinished = false\nlet oldPages\nconst debouncedWritePages = _.debounce(\n  () => {\n    // Don't write pages again until bootstrap has finished.\n    if (bootstrapFinished && !_.isEqual(oldPages, store.getState().pages)) {\n      writePages()\n      oldPages = store.getState().pages\n    }\n  },\n  500,\n  { leading: true }\n)\nemitter.on(`CREATE_PAGE`, () => {\n  // Ignore CREATE_PAGE until bootstrap is finished\n  // as this is called many many times during bootstrap and\n  // we can ignore them until CREATE_PAGE_END is called.\n  //\n  // After bootstrap, we need to listen for this as stateful page\n  // creators e.g. the internal plugin \"component-page-creator\"\n  // calls createPage directly so CREATE_PAGE_END won't get fired.\n  if (bootstrapFinished) {\n    debouncedWritePages()\n  }\n})\n\nemitter.on(`CREATE_PAGE_END`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}