{"version":3,"sources":["../../src/utils/babel-config.js"],"names":["resolvePlugin","pluginName","directory","type","Array","isArray","gatsbyPath","resolve","__dirname","plugin","name","startsWith","pluginInvariantMessage","normalizeConfig","config","normalizedConfig","presets","plugins","normalize","value","normalized","forEach","preset","push","Object","assign","findBabelrc","babelrc","readFileSync","join","parse","error","code","findBabelPackage","packageJson","require","babel","module","exports","program","stage","loose","uglify","modules","targets","browsers","browserslist","exclude","unshift","hasOwnProperty","cacheDirectory","modifiedConfig","length","merge","merged","defaultsDeep","babelConfig"],"mappings":"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","file":"babel-config.js","sourcesContent":["/* @flow */\nimport resolve from \"babel-core/lib/helpers/resolve\"\nimport fs from \"fs\"\nimport path from \"path\"\nimport json5 from \"json5\"\nimport _ from \"lodash\"\nimport invariant from \"invariant\"\nimport apiRunnerNode from \"./api-runner-node\"\n\n// TODO update this to store Babelrc config in Redux store.\n\n/**\n * Uses babel-core helpers to resolve the plugin given its name. It\n * resolves plugins in the following order:\n *\n * 1. Adding babel-type prefix and checking user's local modules\n * 2. Adding babel-type prefix and checking Gatsby's modules\n * 3. Checking users's modules without prefix\n * 4. Checking Gatsby's modules without prefix\n *\n */\nfunction resolvePlugin(pluginName, directory, type) {\n  // When a plugin is specified with options in babelrc, the pluginName contains\n  // the array with [name, options]. In that case we extract the name.\n  pluginName = Array.isArray(pluginName) ? pluginName[0] : pluginName\n\n  const gatsbyPath = path.resolve(__dirname, `..`, `..`)\n  const plugin =\n    resolve(`babel-${type}-${pluginName}`, directory) ||\n    resolve(`babel-${type}-${pluginName}`, gatsbyPath) ||\n    resolve(pluginName, directory) ||\n    resolve(pluginName, gatsbyPath)\n\n  const name = _.startsWith(pluginName, `babel`)\n    ? pluginName\n    : `babel-${type}-${pluginName}`\n  const pluginInvariantMessage = `\n  You are trying to use a Babel plugin or preset which Gatsby cannot find: ${pluginName}\n\n  You can install it using \"npm install --save ${name}\".\n\n  You can use any of the Gatsby provided plugins without installing them:\n    - babel-plugin-add-module-exports\n    - babel-plugin-transform-object-assign\n    - babel-preset-es2015\n    - babel-preset-react\n    - babel-preset-stage-0\n  `\n\n  invariant(plugin !== null, pluginInvariantMessage)\n  return plugin\n}\n\n/**\n * Normalizes a Babel config object to include only absolute paths.\n * This way babel-loader will correctly resolve Babel plugins\n * regardless of where they are located.\n */\nfunction normalizeConfig(config, directory) {\n  const normalizedConfig = {\n    presets: [],\n    plugins: [],\n  }\n\n  const presets = config.presets || []\n  const plugins = config.plugins || []\n\n  const normalize = (value, name) => {\n    let normalized\n\n    if (_.isArray(value)) {\n      normalized = [resolvePlugin(value[0], directory, name), value[1]]\n    } else {\n      normalized = resolvePlugin(value, directory, name)\n    }\n\n    return normalized\n  }\n\n  presets.forEach(preset =>\n    normalizedConfig.presets.push(normalize(preset, `preset`))\n  )\n  plugins.forEach(plugin =>\n    normalizedConfig.plugins.push(normalize(plugin, `plugin`))\n  )\n\n  return Object.assign({}, config, normalizedConfig)\n}\n\n/**\n * Locates a .babelrc in the Gatsby site root directory. Parses it using\n * json5 (what Babel uses). It throws an error if the users's .babelrc is\n * not parseable.\n */\nfunction findBabelrc(directory) {\n  try {\n    const babelrc = fs.readFileSync(path.join(directory, `.babelrc`), `utf-8`)\n    return json5.parse(babelrc)\n  } catch (error) {\n    if (error.code === `ENOENT`) {\n      return null\n    } else {\n      throw error\n    }\n  }\n}\n\n/**\n * Reads the user's package.json and returns the \"babel\" section. It will\n * return undefined when the \"babel\" section does not exist.\n */\nfunction findBabelPackage(directory) {\n  try {\n    // $FlowIssue - https://github.com/facebook/flow/issues/1975\n    const packageJson = require(path.join(directory, `package.json`))\n    return packageJson.babel\n  } catch (error) {\n    if (error.code === `MODULE_NOT_FOUND`) {\n      return null\n    } else {\n      throw error\n    }\n  }\n}\n\n/**\n * Returns a normalized Babel config to use with babel-loader. All of\n * the paths will be absolute so that Babel behaves as expected.\n */\nmodule.exports = async function babelConfig(program, stage) {\n  const { directory } = program\n\n  let babelrc = findBabelrc(directory) || findBabelPackage(directory)\n\n  // If user doesn't have a custom babelrc, add defaults.\n  if (!babelrc) {\n    babelrc = {}\n  }\n  if (!babelrc.plugins) {\n    babelrc.plugins = []\n  }\n  if (!babelrc.presets) {\n    babelrc.presets = []\n  }\n\n  // Add default plugins and presets.\n  ;[\n    [\n      require.resolve(`babel-preset-env`),\n      {\n        loose: true,\n        uglify: true,\n        modules: `commonjs`,\n        targets: {\n          browsers: program.browserslist,\n        },\n        exclude: [`transform-regenerator`, `transform-es2015-typeof-symbol`],\n      },\n    ],\n    `stage-0`,\n    `react`,\n  ].forEach(preset => {\n    babelrc.presets.push(preset)\n  })\n  ;[`add-module-exports`, `transform-object-assign`].forEach(plugin => {\n    babelrc.plugins.push(plugin)\n  })\n\n  if (stage === `develop`) {\n    babelrc.plugins.unshift(`transform-react-jsx-source`)\n    babelrc.plugins.unshift(`react-hot-loader/babel`)\n  }\n\n  babelrc.plugins.unshift(require.resolve(`./babel-plugin-extract-graphql`))\n\n  if (!babelrc.hasOwnProperty(`cacheDirectory`)) {\n    babelrc.cacheDirectory = true\n  }\n\n  const normalizedConfig = normalizeConfig(babelrc, directory)\n  let modifiedConfig = await apiRunnerNode(`modifyBabelrc`, {\n    babelrc: normalizedConfig,\n  })\n  if (modifiedConfig.length > 0) {\n    modifiedConfig = _.merge({}, ...modifiedConfig)\n    // Otherwise this means no plugin changed the babel config.\n  } else {\n    modifiedConfig = {}\n  }\n\n  // Merge all together.\n  const merged = _.defaultsDeep(modifiedConfig, normalizedConfig)\n  return merged\n}\n"]}