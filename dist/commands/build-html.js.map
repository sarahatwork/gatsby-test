{"version":3,"sources":["../../src/commands/build-html.js"],"names":["webpack","require","fs","webpackConfig","store","createErrorFromString","debug","module","exports","program","directory","pages","getState","map","page","path","compilerConfig","Promise","resolve","reject","run","e","stats","outputFile","hasErrors","webpackErrors","toJson","errors","filter","Boolean","length","Error","toString","unlinkSync"],"mappings":";;;;;;;;AACA,MAAMA,UAAUC,QAAS,SAAT,CAAhB;AACA,MAAMC,KAAKD,QAAS,IAAT,CAAX;AACA,MAAME,gBAAgBF,QAAS,yBAAT,CAAtB;AACA,MAAM,EAAEG,KAAF,KAAYH,QAAS,UAAT,CAAlB;AACA,MAAM,EAAEI,qBAAF,KAA4BJ,QAAS,gCAAT,CAAlC;;AAEA,MAAMK,QAAQL,QAAS,OAAT,EAAkB,aAAlB,CAAd;;AAEAM,OAAOC,OAAP;AAAA,6CAAiB,WAAOC,OAAP,EAAwB;AACvC,UAAM,EAAEC,SAAF,KAAgBD,OAAtB;;AAEAH,UAAO,wBAAP;AACA;AACA,UAAMK,QAAQP,MAAMQ,QAAN,GAAiBD,KAAjB,CAAuBE,GAAvB,CAA2B;AAAA,aAAQC,KAAKC,IAAb;AAAA,KAA3B,CAAd;;AAEA;AACA,UAAMC,iBAAiB,MAAMb,cAC3BM,OAD2B,EAE3BC,SAF2B,EAG1B,YAH0B,EAI3B,IAJ2B,EAK3BC,KAL2B,CAA7B;;AAQA,WAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCnB,cAAQgB,eAAeE,OAAf,EAAR,EAAkCE,GAAlC,CAAsC,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAClD,YAAID,CAAJ,EAAO;AACL,iBAAOF,OAAOE,CAAP,CAAP;AACD;AACD,cAAME,aAAc,GAAEb,SAAU,wBAAhC;AACA,YAAIY,MAAME,SAAN,EAAJ,EAAuB;AACrB,cAAIC,gBAAgBH,MAAMI,MAAN,GAAeC,MAAf,CAAsBC,MAAtB,CAA6BC,OAA7B,CAApB;AACA,iBAAOV,OACLM,cAAcK,MAAd,GACIzB,sBAAsBoB,cAAc,CAAd,CAAtB,EAAyC,GAAEF,UAAW,MAAtD,CADJ,GAEI,IAAIQ,KAAJ,CACG,8CAAD,GACG,OAAMT,MAAMU,QAAN,EAAiB,EAF5B,CAHC,CAAP;AAQD;;AAED;AACA,YAAI;AACF9B,aAAG+B,UAAH,CAAcV,UAAd;AACD,SAFD,CAEE,OAAOF,CAAP,EAAU;AACV;AACD;AACD,eAAOH,QAAQ,IAAR,EAAcI,KAAd,CAAP;AACD,OAxBD;AAyBD,KA1BM,CAAP;AA2BD,GA3CD;;AAAA;AAAA;AAAA;AAAA","file":"build-html.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst fs = require(`fs`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst { store } = require(`../redux`)\nconst { createErrorFromString } = require(`gatsby-cli/lib/reporter/errors`)\n\nconst debug = require(`debug`)(`gatsby:html`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  debug(`generating static HTML`)\n  // Reduce pages objects to an array of paths.\n  const pages = store.getState().pages.map(page => page.path)\n\n  // Static site generation.\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `build-html`,\n    null,\n    pages\n  )\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig.resolve()).run((e, stats) => {\n      if (e) {\n        return reject(e)\n      }\n      const outputFile = `${directory}/public/render-page.js`\n      if (stats.hasErrors()) {\n        let webpackErrors = stats.toJson().errors.filter(Boolean)\n        return reject(\n          webpackErrors.length\n            ? createErrorFromString(webpackErrors[0], `${outputFile}.map`)\n            : new Error(\n                `There was an issue while building the site: ` +\n                  `\\n\\n${stats.toString()}`\n              )\n        )\n      }\n\n      // Remove the temp JS bundle file built for the static-site-generator-plugin\n      try {\n        fs.unlinkSync(outputFile)\n      } catch (e) {\n        // This function will fail on Windows with no further consequences.\n      }\n      return resolve(null, stats)\n    })\n  })\n}\n"]}